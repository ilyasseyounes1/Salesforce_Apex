Named Credentials
├── 1. Overview
│   ├── Definition: Secure storage for external system authentication
│   ├── Purpose: Simplify, secure, and streamline outbound integrations
│   └── Use Case: API calls to ERPs, payment gateways, etc.
├── 2. How They Work
│   ├── Configuration: Define URL, auth protocol, credentials
│   ├── Authentication: Salesforce handles auth transparently
│   ├── Usage: Reference in Apex, Flows, Outbound Messaging
│   └── Benefits: Security, reusability, maintainability
├── 3. Components
│   ├── Name: Unique identifier
│   ├── URL: External system endpoint
│   ├── Authentication Protocol: OAuth, Basic Auth, Custom, None
│   ├── Identity Type: Per User, Named Principal
│   ├── Authentication Settings: Client ID/Secret, Username/Password
│   └── Certificate: For JWT or mutual TLS
├── 4. Authentication Protocols
│   ├── OAuth 2.0: Token-based, supports refresh
│   ├── Basic Authentication: Username/password
│   ├── Custom Authentication: API keys, custom headers
│   ├── No Authentication: Public APIs
│   └── JWT-Based: Server-to-server with certificates
├── 5. Usage
│   ├── Apex: callout:<NamedCredentialName>
│   ├── Flows: External Services
│   ├── Outbound Messaging: SOAP headers
│   └── Salesforce Connect: External data sources
├── 6. Authentication Flow
│   ├── General: Configure → Authenticate → Call API
│   ├── OAuth 2.0: Redirect → Token → API call
│   ├── Basic Auth: Encode credentials → API call
│   └── Custom: Add headers/parameters → API call
├── 7. Benefits
│   ├── Security: Encrypted credentials
│   ├── Token Management: Automatic refresh
│   ├── Reusability: Single config for multiple integrations
│   └── Error Handling: Logs and retries
├── 8. Setup
│   ├── Steps: Create in Setup, define URL/auth
│   └── Permissions: Admin and user access
├── 9. Use Cases
│   ├── Payment Gateway: OAuth 2.0, Named Principal
│   ├── ERP Sync: Basic Auth, Named Principal
│   └── Public API: No Auth
└── 10. Limitations
    ├── Governor Limits: Callout time, heap size
    ├── OAuth Refresh: Not always supported
    └── Complex Auth: May need custom logic

Connected Apps are used for inbound integrations, where an external system needs to authenticate with Salesforce to access its APIs. They define how the external system connects and what it can do.
Named Credentials are used for outbound integrations, where Salesforce needs to authenticate with an external system to send data or invoke APIs. They store the external system’s credentials and endpoint.




Connected Apps
├── 1. Overview
│   ├── Definition: Framework for external apps to access Salesforce
│   ├── Purpose: Secure inbound integrations, API access, SSO
│   └── Use Case: Mobile apps, ERP sync, SSO
├── 2. How They Work
│   ├── Configuration: Define auth settings, scopes
│   ├── Authentication: OAuth, SAML, JWT
│   ├── Authorization: Scopes, user permissions
│   └── API Interaction: External app calls Salesforce APIs
├── 3. Components
│   ├── Basic Info: Name, API Name, Contact Email
│   ├── OAuth Settings: Consumer Key, Secret, Callback URL, Scopes
│   ├── SAML Settings: IdP details, ACS URL
│   └── Other: IP Relaxation, Session Policies
├── 4. Authentication Protocols
│   ├── OAuth 2.0: Web Server, User-Agent, JWT, Refresh Token
│   ├── SAML Assertion: SSO-based access
│   ├── Username-Password: Legacy, insecure
│   └── JWT Bearer Token: Server-to-server
├── 5. Authorization
│   ├── OAuth Scopes: Define permissions (api, web, full)
│   ├── User Permissions: Profile-based restrictions
│   └── Policies: IP restrictions, session timeout
├── 6. Authentication Flows
│   ├── Web Server Flow: Web apps, secure servers
│   ├── User-Agent Flow: Mobile/desktop apps
│   ├── JWT Bearer Token Flow: Server-to-server
│   ├── SAML Assertion Flow: SSO apps
│   └── Refresh Token Flow: Long-lived access
├── 7. Connected Apps vs. Named Credentials
│   ├── Connected Apps: Inbound, external → Salesforce
│   ├── Named Credentials: Outbound, Salesforce → external
│   └── Complementary: Use together for bidirectional integrations
├── 8. Setup
│   ├── Steps: Create in App Manager, configure OAuth/SAML
│   └── Permissions: Admin and user access
├── 9. Use Cases
│   ├── Mobile App: OAuth User-Agent Flow
│   ├── ERP Sync: OAuth JWT Bearer Token Flow
│   └── SSO App: SAML Assertion Flow
└── 10. Limitations
    ├── Governor Limits: API request limits
    ├── Security: Protect Consumer Key/Secret
    └── Monitoring: Track usage for anomalies